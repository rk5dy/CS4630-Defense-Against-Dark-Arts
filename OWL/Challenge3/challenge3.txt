
challenge3.bin:     file format elf32-i386


Disassembly of section .init:

08048338 <_init>:
 8048338:	53                   	push   %ebx
 8048339:	83 ec 08             	sub    $0x8,%esp
 804833c:	e8 00 00 00 00       	call   8048341 <_init+0x9>
 8048341:	5b                   	pop    %ebx
 8048342:	81 c3 b3 1c 00 00    	add    $0x1cb3,%ebx
 8048348:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 804834e:	85 c0                	test   %eax,%eax
 8048350:	74 05                	je     8048357 <_init+0x1f>
 8048352:	e8 69 00 00 00       	call   80483c0 <__gmon_start__@plt>
 8048357:	e8 24 01 00 00       	call   8048480 <frame_dummy>
 804835c:	e8 bf 02 00 00       	call   8048620 <__do_global_ctors_aux>
 8048361:	83 c4 08             	add    $0x8,%esp
 8048364:	5b                   	pop    %ebx
 8048365:	c3                   	ret    

Disassembly of section .plt:

08048370 <mprotect@plt-0x10>:
 8048370:	ff 35 f8 9f 04 08    	pushl  0x8049ff8
 8048376:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 804837c:	00 00                	add    %al,(%eax)
	...

08048380 <mprotect@plt>:
 8048380:	ff 25 00 a0 04 08    	jmp    *0x804a000
 8048386:	68 00 00 00 00       	push   $0x0
 804838b:	e9 e0 ff ff ff       	jmp    8048370 <_init+0x38>

08048390 <printf@plt>:
 8048390:	ff 25 04 a0 04 08    	jmp    *0x804a004
 8048396:	68 08 00 00 00       	push   $0x8
 804839b:	e9 d0 ff ff ff       	jmp    8048370 <_init+0x38>

080483a0 <getchar@plt>:
 80483a0:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80483a6:	68 10 00 00 00       	push   $0x10
 80483ab:	e9 c0 ff ff ff       	jmp    8048370 <_init+0x38>

080483b0 <puts@plt>:
 80483b0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80483b6:	68 18 00 00 00       	push   $0x18
 80483bb:	e9 b0 ff ff ff       	jmp    8048370 <_init+0x38>

080483c0 <__gmon_start__@plt>:
 80483c0:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80483c6:	68 20 00 00 00       	push   $0x20
 80483cb:	e9 a0 ff ff ff       	jmp    8048370 <_init+0x38>

080483d0 <exit@plt>:
 80483d0:	ff 25 14 a0 04 08    	jmp    *0x804a014
 80483d6:	68 28 00 00 00       	push   $0x28
 80483db:	e9 90 ff ff ff       	jmp    8048370 <_init+0x38>

080483e0 <__libc_start_main@plt>:
 80483e0:	ff 25 18 a0 04 08    	jmp    *0x804a018
 80483e6:	68 30 00 00 00       	push   $0x30
 80483eb:	e9 80 ff ff ff       	jmp    8048370 <_init+0x38>

Disassembly of section .text:

080483f0 <_start>:
 80483f0:	31 ed                	xor    %ebp,%ebp
 80483f2:	5e                   	pop    %esi
 80483f3:	89 e1                	mov    %esp,%ecx
 80483f5:	83 e4 f0             	and    $0xfffffff0,%esp
 80483f8:	50                   	push   %eax
 80483f9:	54                   	push   %esp
 80483fa:	52                   	push   %edx
 80483fb:	68 10 86 04 08       	push   $0x8048610
 8048400:	68 a0 85 04 08       	push   $0x80485a0
 8048405:	51                   	push   %ecx
 8048406:	56                   	push   %esi
 8048407:	68 2f 85 04 08       	push   $0x804852f
 804840c:	e8 cf ff ff ff       	call   80483e0 <__libc_start_main@plt>
 8048411:	f4                   	hlt    
 8048412:	90                   	nop
 8048413:	90                   	nop
 8048414:	90                   	nop
 8048415:	90                   	nop
 8048416:	90                   	nop
 8048417:	90                   	nop
 8048418:	90                   	nop
 8048419:	90                   	nop
 804841a:	90                   	nop
 804841b:	90                   	nop
 804841c:	90                   	nop
 804841d:	90                   	nop
 804841e:	90                   	nop
 804841f:	90                   	nop

08048420 <__do_global_dtors_aux>:
 8048420:	55                   	push   %ebp
 8048421:	89 e5                	mov    %esp,%ebp
 8048423:	53                   	push   %ebx
 8048424:	83 ec 04             	sub    $0x4,%esp
 8048427:	80 3d 40 a0 04 08 00 	cmpb   $0x0,0x804a040
 804842e:	75 3f                	jne    804846f <__do_global_dtors_aux+0x4f>
 8048430:	a1 44 a0 04 08       	mov    0x804a044,%eax
 8048435:	bb 20 9f 04 08       	mov    $0x8049f20,%ebx
 804843a:	81 eb 1c 9f 04 08    	sub    $0x8049f1c,%ebx
 8048440:	c1 fb 02             	sar    $0x2,%ebx
 8048443:	83 eb 01             	sub    $0x1,%ebx
 8048446:	39 d8                	cmp    %ebx,%eax
 8048448:	73 1e                	jae    8048468 <__do_global_dtors_aux+0x48>
 804844a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048450:	83 c0 01             	add    $0x1,%eax
 8048453:	a3 44 a0 04 08       	mov    %eax,0x804a044
 8048458:	ff 14 85 1c 9f 04 08 	call   *0x8049f1c(,%eax,4)
 804845f:	a1 44 a0 04 08       	mov    0x804a044,%eax
 8048464:	39 d8                	cmp    %ebx,%eax
 8048466:	72 e8                	jb     8048450 <__do_global_dtors_aux+0x30>
 8048468:	c6 05 40 a0 04 08 01 	movb   $0x1,0x804a040
 804846f:	83 c4 04             	add    $0x4,%esp
 8048472:	5b                   	pop    %ebx
 8048473:	5d                   	pop    %ebp
 8048474:	c3                   	ret    
 8048475:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048479:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048480 <frame_dummy>:
 8048480:	55                   	push   %ebp
 8048481:	89 e5                	mov    %esp,%ebp
 8048483:	83 ec 18             	sub    $0x18,%esp
 8048486:	a1 24 9f 04 08       	mov    0x8049f24,%eax
 804848b:	85 c0                	test   %eax,%eax
 804848d:	74 12                	je     80484a1 <frame_dummy+0x21>
 804848f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048494:	85 c0                	test   %eax,%eax
 8048496:	74 09                	je     80484a1 <frame_dummy+0x21>
 8048498:	c7 04 24 24 9f 04 08 	movl   $0x8049f24,(%esp)
 804849f:	ff d0                	call   *%eax
 80484a1:	c9                   	leave  
 80484a2:	c3                   	ret    
 80484a3:	90                   	nop

080484a4 <readString>:
 80484a4:	55                   	push   %ebp
 80484a5:	89 e5                	mov    %esp,%ebp
 80484a7:	83 ec 78             	sub    $0x78,%esp
 80484aa:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 80484b1:	e8 ea fe ff ff       	call   80483a0 <getchar@plt>
 80484b6:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80484b9:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
 80484bd:	74 19                	je     80484d8 <readString+0x34>
 80484bf:	83 7d f0 0a          	cmpl   $0xa,-0x10(%ebp)
 80484c3:	74 13                	je     80484d8 <readString+0x34>
 80484c5:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80484c8:	89 c2                	mov    %eax,%edx
 80484ca:	8d 45 8e             	lea    -0x72(%ebp),%eax
 80484cd:	03 45 f4             	add    -0xc(%ebp),%eax
 80484d0:	88 10                	mov    %dl,(%eax)
 80484d2:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 80484d6:	eb d9                	jmp    80484b1 <readString+0xd>
 80484d8:	8d 45 8e             	lea    -0x72(%ebp),%eax
 80484db:	03 45 f4             	add    -0xc(%ebp),%eax
 80484de:	c6 00 00             	movb   $0x0,(%eax)
 80484e1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 80484e8:	eb 15                	jmp    80484ff <readString+0x5b>
 80484ea:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80484ed:	03 45 08             	add    0x8(%ebp),%eax
 80484f0:	8d 55 8e             	lea    -0x72(%ebp),%edx
 80484f3:	03 55 f4             	add    -0xc(%ebp),%edx
 80484f6:	0f b6 12             	movzbl (%edx),%edx
 80484f9:	88 10                	mov    %dl,(%eax)
 80484fb:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 80484ff:	83 7d f4 61          	cmpl   $0x61,-0xc(%ebp)
 8048503:	7e e5                	jle    80484ea <readString+0x46>
 8048505:	c9                   	leave  
 8048506:	c3                   	ret    

08048507 <message>:
 8048507:	55                   	push   %ebp
 8048508:	89 e5                	mov    %esp,%ebp
 804850a:	83 ec 18             	sub    $0x18,%esp
 804850d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 8048511:	74 0e                	je     8048521 <message+0x1a>
 8048513:	c7 04 24 70 86 04 08 	movl   $0x8048670,(%esp)
 804851a:	e8 91 fe ff ff       	call   80483b0 <puts@plt>
 804851f:	eb 0c                	jmp    804852d <message+0x26>
 8048521:	c7 04 24 a4 86 04 08 	movl   $0x80486a4,(%esp)
 8048528:	e8 83 fe ff ff       	call   80483b0 <puts@plt>
 804852d:	c9                   	leave  
 804852e:	c3                   	ret    

0804852f <main>:
 804852f:	55                   	push   %ebp
 8048530:	89 e5                	mov    %esp,%ebp
 8048532:	83 e4 f0             	and    $0xfffffff0,%esp
 8048535:	83 ec 10             	sub    $0x10,%esp
 8048538:	b8 80 a0 04 08       	mov    $0x804a080,%eax
 804853d:	25 00 f0 ff ff       	and    $0xfffff000,%eax
 8048542:	c7 44 24 08 07 00 00 	movl   $0x7,0x8(%esp)
 8048549:	00 
 804854a:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8048551:	00 
 8048552:	89 04 24             	mov    %eax,(%esp)
 8048555:	e8 26 fe ff ff       	call   8048380 <mprotect@plt>
 804855a:	c7 04 24 80 a0 04 08 	movl   $0x804a080,(%esp)
 8048561:	e8 3e ff ff ff       	call   80484a4 <readString>
 8048566:	b8 e5 86 04 08       	mov    $0x80486e5,%eax
 804856b:	c7 44 24 04 80 a0 04 	movl   $0x804a080,0x4(%esp)
 8048572:	08 
 8048573:	89 04 24             	mov    %eax,(%esp)
 8048576:	e8 15 fe ff ff       	call   8048390 <printf@plt>
 804857b:	a1 48 a0 04 08       	mov    0x804a048,%eax
 8048580:	89 04 24             	mov    %eax,(%esp)
 8048583:	e8 7f ff ff ff       	call   8048507 <message>
 8048588:	c7 04 24 f5 86 04 08 	movl   $0x80486f5,(%esp)
 804858f:	e8 1c fe ff ff       	call   80483b0 <puts@plt>
 8048594:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 804859b:	e8 30 fe ff ff       	call   80483d0 <exit@plt>

080485a0 <__libc_csu_init>:
 80485a0:	55                   	push   %ebp
 80485a1:	57                   	push   %edi
 80485a2:	56                   	push   %esi
 80485a3:	53                   	push   %ebx
 80485a4:	e8 69 00 00 00       	call   8048612 <__i686.get_pc_thunk.bx>
 80485a9:	81 c3 4b 1a 00 00    	add    $0x1a4b,%ebx
 80485af:	83 ec 1c             	sub    $0x1c,%esp
 80485b2:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 80485b6:	8d bb 20 ff ff ff    	lea    -0xe0(%ebx),%edi
 80485bc:	e8 77 fd ff ff       	call   8048338 <_init>
 80485c1:	8d 83 20 ff ff ff    	lea    -0xe0(%ebx),%eax
 80485c7:	29 c7                	sub    %eax,%edi
 80485c9:	c1 ff 02             	sar    $0x2,%edi
 80485cc:	85 ff                	test   %edi,%edi
 80485ce:	74 29                	je     80485f9 <__libc_csu_init+0x59>
 80485d0:	31 f6                	xor    %esi,%esi
 80485d2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80485d8:	8b 44 24 38          	mov    0x38(%esp),%eax
 80485dc:	89 2c 24             	mov    %ebp,(%esp)
 80485df:	89 44 24 08          	mov    %eax,0x8(%esp)
 80485e3:	8b 44 24 34          	mov    0x34(%esp),%eax
 80485e7:	89 44 24 04          	mov    %eax,0x4(%esp)
 80485eb:	ff 94 b3 20 ff ff ff 	call   *-0xe0(%ebx,%esi,4)
 80485f2:	83 c6 01             	add    $0x1,%esi
 80485f5:	39 fe                	cmp    %edi,%esi
 80485f7:	75 df                	jne    80485d8 <__libc_csu_init+0x38>
 80485f9:	83 c4 1c             	add    $0x1c,%esp
 80485fc:	5b                   	pop    %ebx
 80485fd:	5e                   	pop    %esi
 80485fe:	5f                   	pop    %edi
 80485ff:	5d                   	pop    %ebp
 8048600:	c3                   	ret    
 8048601:	eb 0d                	jmp    8048610 <__libc_csu_fini>
 8048603:	90                   	nop
 8048604:	90                   	nop
 8048605:	90                   	nop
 8048606:	90                   	nop
 8048607:	90                   	nop
 8048608:	90                   	nop
 8048609:	90                   	nop
 804860a:	90                   	nop
 804860b:	90                   	nop
 804860c:	90                   	nop
 804860d:	90                   	nop
 804860e:	90                   	nop
 804860f:	90                   	nop

08048610 <__libc_csu_fini>:
 8048610:	f3 c3                	repz ret 

08048612 <__i686.get_pc_thunk.bx>:
 8048612:	8b 1c 24             	mov    (%esp),%ebx
 8048615:	c3                   	ret    
 8048616:	90                   	nop
 8048617:	90                   	nop
 8048618:	90                   	nop
 8048619:	90                   	nop
 804861a:	90                   	nop
 804861b:	90                   	nop
 804861c:	90                   	nop
 804861d:	90                   	nop
 804861e:	90                   	nop
 804861f:	90                   	nop

08048620 <__do_global_ctors_aux>:
 8048620:	55                   	push   %ebp
 8048621:	89 e5                	mov    %esp,%ebp
 8048623:	53                   	push   %ebx
 8048624:	83 ec 04             	sub    $0x4,%esp
 8048627:	a1 14 9f 04 08       	mov    0x8049f14,%eax
 804862c:	83 f8 ff             	cmp    $0xffffffff,%eax
 804862f:	74 13                	je     8048644 <__do_global_ctors_aux+0x24>
 8048631:	bb 14 9f 04 08       	mov    $0x8049f14,%ebx
 8048636:	66 90                	xchg   %ax,%ax
 8048638:	83 eb 04             	sub    $0x4,%ebx
 804863b:	ff d0                	call   *%eax
 804863d:	8b 03                	mov    (%ebx),%eax
 804863f:	83 f8 ff             	cmp    $0xffffffff,%eax
 8048642:	75 f4                	jne    8048638 <__do_global_ctors_aux+0x18>
 8048644:	83 c4 04             	add    $0x4,%esp
 8048647:	5b                   	pop    %ebx
 8048648:	5d                   	pop    %ebp
 8048649:	c3                   	ret    
 804864a:	90                   	nop
 804864b:	90                   	nop

Disassembly of section .fini:

0804864c <_fini>:
 804864c:	53                   	push   %ebx
 804864d:	83 ec 08             	sub    $0x8,%esp
 8048650:	e8 00 00 00 00       	call   8048655 <_fini+0x9>
 8048655:	5b                   	pop    %ebx
 8048656:	81 c3 9f 19 00 00    	add    $0x199f,%ebx
 804865c:	e8 bf fd ff ff       	call   8048420 <__do_global_dtors_aux>
 8048661:	83 c4 08             	add    $0x8,%esp
 8048664:	5b                   	pop    %ebx
 8048665:	c3                   	ret    
