
format_string_vulnerability.bin:     file format elf32-i386


Disassembly of section .init:

0804833c <_init>:
 804833c:	53                   	push   %ebx
 804833d:	83 ec 08             	sub    $0x8,%esp
 8048340:	e8 00 00 00 00       	call   8048345 <_init+0x9>
 8048345:	5b                   	pop    %ebx
 8048346:	81 c3 af 1c 00 00    	add    $0x1caf,%ebx
 804834c:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048352:	85 c0                	test   %eax,%eax
 8048354:	74 05                	je     804835b <_init+0x1f>
 8048356:	e8 55 00 00 00       	call   80483b0 <__gmon_start__@plt>
 804835b:	e8 00 01 00 00       	call   8048460 <frame_dummy>
 8048360:	e8 bb 02 00 00       	call   8048620 <__do_global_ctors_aux>
 8048365:	83 c4 08             	add    $0x8,%esp
 8048368:	5b                   	pop    %ebx
 8048369:	c3                   	ret    

Disassembly of section .plt:

08048370 <printf@plt-0x10>:
 8048370:	ff 35 f8 9f 04 08    	pushl  0x8049ff8
 8048376:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 804837c:	00 00                	add    %al,(%eax)
	...

08048380 <printf@plt>:
 8048380:	ff 25 00 a0 04 08    	jmp    *0x804a000
 8048386:	68 00 00 00 00       	push   $0x0
 804838b:	e9 e0 ff ff ff       	jmp    8048370 <_init+0x34>

08048390 <fgets@plt>:
 8048390:	ff 25 04 a0 04 08    	jmp    *0x804a004
 8048396:	68 08 00 00 00       	push   $0x8
 804839b:	e9 d0 ff ff ff       	jmp    8048370 <_init+0x34>

080483a0 <__stack_chk_fail@plt>:
 80483a0:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80483a6:	68 10 00 00 00       	push   $0x10
 80483ab:	e9 c0 ff ff ff       	jmp    8048370 <_init+0x34>

080483b0 <__gmon_start__@plt>:
 80483b0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80483b6:	68 18 00 00 00       	push   $0x18
 80483bb:	e9 b0 ff ff ff       	jmp    8048370 <_init+0x34>

080483c0 <__libc_start_main@plt>:
 80483c0:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80483c6:	68 20 00 00 00       	push   $0x20
 80483cb:	e9 a0 ff ff ff       	jmp    8048370 <_init+0x34>

Disassembly of section .text:

080483d0 <_start>:
 80483d0:	31 ed                	xor    %ebp,%ebp
 80483d2:	5e                   	pop    %esi
 80483d3:	89 e1                	mov    %esp,%ecx
 80483d5:	83 e4 f0             	and    $0xfffffff0,%esp
 80483d8:	50                   	push   %eax
 80483d9:	54                   	push   %esp
 80483da:	52                   	push   %edx
 80483db:	68 10 86 04 08       	push   $0x8048610
 80483e0:	68 a0 85 04 08       	push   $0x80485a0
 80483e5:	51                   	push   %ecx
 80483e6:	56                   	push   %esi
 80483e7:	68 97 84 04 08       	push   $0x8048497
 80483ec:	e8 cf ff ff ff       	call   80483c0 <__libc_start_main@plt>
 80483f1:	f4                   	hlt    
 80483f2:	90                   	nop
 80483f3:	90                   	nop
 80483f4:	90                   	nop
 80483f5:	90                   	nop
 80483f6:	90                   	nop
 80483f7:	90                   	nop
 80483f8:	90                   	nop
 80483f9:	90                   	nop
 80483fa:	90                   	nop
 80483fb:	90                   	nop
 80483fc:	90                   	nop
 80483fd:	90                   	nop
 80483fe:	90                   	nop
 80483ff:	90                   	nop

08048400 <__do_global_dtors_aux>:
 8048400:	55                   	push   %ebp
 8048401:	89 e5                	mov    %esp,%ebp
 8048403:	53                   	push   %ebx
 8048404:	83 ec 04             	sub    $0x4,%esp
 8048407:	80 3d 24 a0 04 08 00 	cmpb   $0x0,0x804a024
 804840e:	75 3f                	jne    804844f <__do_global_dtors_aux+0x4f>
 8048410:	a1 28 a0 04 08       	mov    0x804a028,%eax
 8048415:	bb 20 9f 04 08       	mov    $0x8049f20,%ebx
 804841a:	81 eb 1c 9f 04 08    	sub    $0x8049f1c,%ebx
 8048420:	c1 fb 02             	sar    $0x2,%ebx
 8048423:	83 eb 01             	sub    $0x1,%ebx
 8048426:	39 d8                	cmp    %ebx,%eax
 8048428:	73 1e                	jae    8048448 <__do_global_dtors_aux+0x48>
 804842a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048430:	83 c0 01             	add    $0x1,%eax
 8048433:	a3 28 a0 04 08       	mov    %eax,0x804a028
 8048438:	ff 14 85 1c 9f 04 08 	call   *0x8049f1c(,%eax,4)
 804843f:	a1 28 a0 04 08       	mov    0x804a028,%eax
 8048444:	39 d8                	cmp    %ebx,%eax
 8048446:	72 e8                	jb     8048430 <__do_global_dtors_aux+0x30>
 8048448:	c6 05 24 a0 04 08 01 	movb   $0x1,0x804a024
 804844f:	83 c4 04             	add    $0x4,%esp
 8048452:	5b                   	pop    %ebx
 8048453:	5d                   	pop    %ebp
 8048454:	c3                   	ret    
 8048455:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048459:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048460 <frame_dummy>:
 8048460:	55                   	push   %ebp
 8048461:	89 e5                	mov    %esp,%ebp
 8048463:	83 ec 18             	sub    $0x18,%esp
 8048466:	a1 24 9f 04 08       	mov    0x8049f24,%eax
 804846b:	85 c0                	test   %eax,%eax
 804846d:	74 12                	je     8048481 <frame_dummy+0x21>
 804846f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048474:	85 c0                	test   %eax,%eax
 8048476:	74 09                	je     8048481 <frame_dummy+0x21>
 8048478:	c7 04 24 24 9f 04 08 	movl   $0x8049f24,(%esp)
 804847f:	ff d0                	call   *%eax
 8048481:	c9                   	leave  
 8048482:	c3                   	ret    
 8048483:	90                   	nop

08048484 <vulnerable>:
 8048484:	55                   	push   %ebp
 8048485:	89 e5                	mov    %esp,%ebp
 8048487:	83 ec 18             	sub    $0x18,%esp
 804848a:	8b 45 08             	mov    0x8(%ebp),%eax
 804848d:	89 04 24             	mov    %eax,(%esp)
 8048490:	e8 eb fe ff ff       	call   8048380 <printf@plt>
 8048495:	c9                   	leave  
 8048496:	c3                   	ret    

08048497 <main>:
 8048497:	55                   	push   %ebp
 8048498:	89 e5                	mov    %esp,%ebp
 804849a:	57                   	push   %edi
 804849b:	53                   	push   %ebx
 804849c:	83 e4 f0             	and    $0xfffffff0,%esp
 804849f:	81 ec 30 01 00 00    	sub    $0x130,%esp
 80484a5:	8b 45 0c             	mov    0xc(%ebp),%eax
 80484a8:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 80484ac:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80484b2:	89 84 24 2c 01 00 00 	mov    %eax,0x12c(%esp)
 80484b9:	31 c0                	xor    %eax,%eax
 80484bb:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 80484c2:	00 
 80484c3:	8d 5c 24 30          	lea    0x30(%esp),%ebx
 80484c7:	b8 00 00 00 00       	mov    $0x0,%eax
 80484cc:	ba 3f 00 00 00       	mov    $0x3f,%edx
 80484d1:	89 df                	mov    %ebx,%edi
 80484d3:	89 d1                	mov    %edx,%ecx
 80484d5:	f3 ab                	rep stos %eax,%es:(%edi)
 80484d7:	a1 20 a0 04 08       	mov    0x804a020,%eax
 80484dc:	89 44 24 08          	mov    %eax,0x8(%esp)
 80484e0:	c7 44 24 04 c8 00 00 	movl   $0xc8,0x4(%esp)
 80484e7:	00 
 80484e8:	8d 44 24 2c          	lea    0x2c(%esp),%eax
 80484ec:	89 04 24             	mov    %eax,(%esp)
 80484ef:	e8 9c fe ff ff       	call   8048390 <fgets@plt>
 80484f4:	a1 20 a0 04 08       	mov    0x804a020,%eax
 80484f9:	89 44 24 08          	mov    %eax,0x8(%esp)
 80484fd:	c7 44 24 04 c8 00 00 	movl   $0xc8,0x4(%esp)
 8048504:	00 
 8048505:	c7 04 24 40 a0 04 08 	movl   $0x804a040,(%esp)
 804850c:	e8 7f fe ff ff       	call   8048390 <fgets@plt>
 8048511:	b8 40 a0 04 08       	mov    $0x804a040,%eax
 8048516:	c7 44 24 18 ff ff ff 	movl   $0xffffffff,0x18(%esp)
 804851d:	ff 
 804851e:	89 c2                	mov    %eax,%edx
 8048520:	b8 00 00 00 00       	mov    $0x0,%eax
 8048525:	8b 4c 24 18          	mov    0x18(%esp),%ecx
 8048529:	89 d7                	mov    %edx,%edi
 804852b:	f2 ae                	repnz scas %es:(%edi),%al
 804852d:	89 c8                	mov    %ecx,%eax
 804852f:	f7 d0                	not    %eax
 8048531:	83 e8 01             	sub    $0x1,%eax
 8048534:	83 e8 01             	sub    $0x1,%eax
 8048537:	c6 80 40 a0 04 08 00 	movb   $0x0,0x804a040(%eax)
 804853e:	8d 44 24 2c          	lea    0x2c(%esp),%eax
 8048542:	89 04 24             	mov    %eax,(%esp)
 8048545:	e8 3a ff ff ff       	call   8048484 <vulnerable>
 804854a:	b8 70 86 04 08       	mov    $0x8048670,%eax
 804854f:	c7 44 24 04 40 a0 04 	movl   $0x804a040,0x4(%esp)
 8048556:	08 
 8048557:	89 04 24             	mov    %eax,(%esp)
 804855a:	e8 21 fe ff ff       	call   8048380 <printf@plt>
 804855f:	0f b6 05 1c a0 04 08 	movzbl 0x804a01c,%eax
 8048566:	0f be d0             	movsbl %al,%edx
 8048569:	b8 80 86 04 08       	mov    $0x8048680,%eax
 804856e:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048572:	89 04 24             	mov    %eax,(%esp)
 8048575:	e8 06 fe ff ff       	call   8048380 <printf@plt>
 804857a:	b8 00 00 00 00       	mov    $0x0,%eax
 804857f:	8b 94 24 2c 01 00 00 	mov    0x12c(%esp),%edx
 8048586:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 804858d:	74 05                	je     8048594 <main+0xfd>
 804858f:	e8 0c fe ff ff       	call   80483a0 <__stack_chk_fail@plt>
 8048594:	8d 65 f8             	lea    -0x8(%ebp),%esp
 8048597:	5b                   	pop    %ebx
 8048598:	5f                   	pop    %edi
 8048599:	5d                   	pop    %ebp
 804859a:	c3                   	ret    
 804859b:	90                   	nop
 804859c:	90                   	nop
 804859d:	90                   	nop
 804859e:	90                   	nop
 804859f:	90                   	nop

080485a0 <__libc_csu_init>:
 80485a0:	55                   	push   %ebp
 80485a1:	57                   	push   %edi
 80485a2:	56                   	push   %esi
 80485a3:	53                   	push   %ebx
 80485a4:	e8 69 00 00 00       	call   8048612 <__i686.get_pc_thunk.bx>
 80485a9:	81 c3 4b 1a 00 00    	add    $0x1a4b,%ebx
 80485af:	83 ec 1c             	sub    $0x1c,%esp
 80485b2:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 80485b6:	8d bb 20 ff ff ff    	lea    -0xe0(%ebx),%edi
 80485bc:	e8 7b fd ff ff       	call   804833c <_init>
 80485c1:	8d 83 20 ff ff ff    	lea    -0xe0(%ebx),%eax
 80485c7:	29 c7                	sub    %eax,%edi
 80485c9:	c1 ff 02             	sar    $0x2,%edi
 80485cc:	85 ff                	test   %edi,%edi
 80485ce:	74 29                	je     80485f9 <__libc_csu_init+0x59>
 80485d0:	31 f6                	xor    %esi,%esi
 80485d2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80485d8:	8b 44 24 38          	mov    0x38(%esp),%eax
 80485dc:	89 2c 24             	mov    %ebp,(%esp)
 80485df:	89 44 24 08          	mov    %eax,0x8(%esp)
 80485e3:	8b 44 24 34          	mov    0x34(%esp),%eax
 80485e7:	89 44 24 04          	mov    %eax,0x4(%esp)
 80485eb:	ff 94 b3 20 ff ff ff 	call   *-0xe0(%ebx,%esi,4)
 80485f2:	83 c6 01             	add    $0x1,%esi
 80485f5:	39 fe                	cmp    %edi,%esi
 80485f7:	75 df                	jne    80485d8 <__libc_csu_init+0x38>
 80485f9:	83 c4 1c             	add    $0x1c,%esp
 80485fc:	5b                   	pop    %ebx
 80485fd:	5e                   	pop    %esi
 80485fe:	5f                   	pop    %edi
 80485ff:	5d                   	pop    %ebp
 8048600:	c3                   	ret    
 8048601:	eb 0d                	jmp    8048610 <__libc_csu_fini>
 8048603:	90                   	nop
 8048604:	90                   	nop
 8048605:	90                   	nop
 8048606:	90                   	nop
 8048607:	90                   	nop
 8048608:	90                   	nop
 8048609:	90                   	nop
 804860a:	90                   	nop
 804860b:	90                   	nop
 804860c:	90                   	nop
 804860d:	90                   	nop
 804860e:	90                   	nop
 804860f:	90                   	nop

08048610 <__libc_csu_fini>:
 8048610:	f3 c3                	repz ret 

08048612 <__i686.get_pc_thunk.bx>:
 8048612:	8b 1c 24             	mov    (%esp),%ebx
 8048615:	c3                   	ret    
 8048616:	90                   	nop
 8048617:	90                   	nop
 8048618:	90                   	nop
 8048619:	90                   	nop
 804861a:	90                   	nop
 804861b:	90                   	nop
 804861c:	90                   	nop
 804861d:	90                   	nop
 804861e:	90                   	nop
 804861f:	90                   	nop

08048620 <__do_global_ctors_aux>:
 8048620:	55                   	push   %ebp
 8048621:	89 e5                	mov    %esp,%ebp
 8048623:	53                   	push   %ebx
 8048624:	83 ec 04             	sub    $0x4,%esp
 8048627:	a1 14 9f 04 08       	mov    0x8049f14,%eax
 804862c:	83 f8 ff             	cmp    $0xffffffff,%eax
 804862f:	74 13                	je     8048644 <__do_global_ctors_aux+0x24>
 8048631:	bb 14 9f 04 08       	mov    $0x8049f14,%ebx
 8048636:	66 90                	xchg   %ax,%ax
 8048638:	83 eb 04             	sub    $0x4,%ebx
 804863b:	ff d0                	call   *%eax
 804863d:	8b 03                	mov    (%ebx),%eax
 804863f:	83 f8 ff             	cmp    $0xffffffff,%eax
 8048642:	75 f4                	jne    8048638 <__do_global_ctors_aux+0x18>
 8048644:	83 c4 04             	add    $0x4,%esp
 8048647:	5b                   	pop    %ebx
 8048648:	5d                   	pop    %ebp
 8048649:	c3                   	ret    
 804864a:	90                   	nop
 804864b:	90                   	nop

Disassembly of section .fini:

0804864c <_fini>:
 804864c:	53                   	push   %ebx
 804864d:	83 ec 08             	sub    $0x8,%esp
 8048650:	e8 00 00 00 00       	call   8048655 <_fini+0x9>
 8048655:	5b                   	pop    %ebx
 8048656:	81 c3 9f 19 00 00    	add    $0x199f,%ebx
 804865c:	e8 9f fd ff ff       	call   8048400 <__do_global_dtors_aux>
 8048661:	83 c4 08             	add    $0x8,%esp
 8048664:	5b                   	pop    %ebx
 8048665:	c3                   	ret    
