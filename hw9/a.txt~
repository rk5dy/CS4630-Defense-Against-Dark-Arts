
a.out:     file format elf32-i386


Disassembly of section .init:

080482f8 <_init>:
 80482f8:	53                   	push   %ebx
 80482f9:	83 ec 08             	sub    $0x8,%esp
 80482fc:	e8 00 00 00 00       	call   8048301 <_init+0x9>
 8048301:	5b                   	pop    %ebx
 8048302:	81 c3 f3 1c 00 00    	add    $0x1cf3,%ebx
 8048308:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 804830e:	85 c0                	test   %eax,%eax
 8048310:	74 05                	je     8048317 <_init+0x1f>
 8048312:	e8 49 00 00 00       	call   8048360 <__gmon_start__@plt>
 8048317:	e8 f4 00 00 00       	call   8048410 <frame_dummy>
 804831c:	e8 5f 02 00 00       	call   8048580 <__do_global_ctors_aux>
 8048321:	83 c4 08             	add    $0x8,%esp
 8048324:	5b                   	pop    %ebx
 8048325:	c3                   	ret    

Disassembly of section .plt:

08048330 <printf@plt-0x10>:
 8048330:	ff 35 f8 9f 04 08    	pushl  0x8049ff8
 8048336:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 804833c:	00 00                	add    %al,(%eax)
	...

08048340 <printf@plt>:
 8048340:	ff 25 00 a0 04 08    	jmp    *0x804a000
 8048346:	68 00 00 00 00       	push   $0x0
 804834b:	e9 e0 ff ff ff       	jmp    8048330 <_init+0x38>

08048350 <__stack_chk_fail@plt>:
 8048350:	ff 25 04 a0 04 08    	jmp    *0x804a004
 8048356:	68 08 00 00 00       	push   $0x8
 804835b:	e9 d0 ff ff ff       	jmp    8048330 <_init+0x38>

08048360 <__gmon_start__@plt>:
 8048360:	ff 25 08 a0 04 08    	jmp    *0x804a008
 8048366:	68 10 00 00 00       	push   $0x10
 804836b:	e9 c0 ff ff ff       	jmp    8048330 <_init+0x38>

08048370 <__libc_start_main@plt>:
 8048370:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048376:	68 18 00 00 00       	push   $0x18
 804837b:	e9 b0 ff ff ff       	jmp    8048330 <_init+0x38>

Disassembly of section .text:

08048380 <_start>:
 8048380:	31 ed                	xor    %ebp,%ebp
 8048382:	5e                   	pop    %esi
 8048383:	89 e1                	mov    %esp,%ecx
 8048385:	83 e4 f0             	and    $0xfffffff0,%esp
 8048388:	50                   	push   %eax
 8048389:	54                   	push   %esp
 804838a:	52                   	push   %edx
 804838b:	68 70 85 04 08       	push   $0x8048570
 8048390:	68 00 85 04 08       	push   $0x8048500
 8048395:	51                   	push   %ecx
 8048396:	56                   	push   %esi
 8048397:	68 34 84 04 08       	push   $0x8048434
 804839c:	e8 cf ff ff ff       	call   8048370 <__libc_start_main@plt>
 80483a1:	f4                   	hlt    
 80483a2:	90                   	nop
 80483a3:	90                   	nop
 80483a4:	90                   	nop
 80483a5:	90                   	nop
 80483a6:	90                   	nop
 80483a7:	90                   	nop
 80483a8:	90                   	nop
 80483a9:	90                   	nop
 80483aa:	90                   	nop
 80483ab:	90                   	nop
 80483ac:	90                   	nop
 80483ad:	90                   	nop
 80483ae:	90                   	nop
 80483af:	90                   	nop

080483b0 <__do_global_dtors_aux>:
 80483b0:	55                   	push   %ebp
 80483b1:	89 e5                	mov    %esp,%ebp
 80483b3:	53                   	push   %ebx
 80483b4:	83 ec 04             	sub    $0x4,%esp
 80483b7:	80 3d 18 a0 04 08 00 	cmpb   $0x0,0x804a018
 80483be:	75 3f                	jne    80483ff <__do_global_dtors_aux+0x4f>
 80483c0:	a1 1c a0 04 08       	mov    0x804a01c,%eax
 80483c5:	bb 20 9f 04 08       	mov    $0x8049f20,%ebx
 80483ca:	81 eb 1c 9f 04 08    	sub    $0x8049f1c,%ebx
 80483d0:	c1 fb 02             	sar    $0x2,%ebx
 80483d3:	83 eb 01             	sub    $0x1,%ebx
 80483d6:	39 d8                	cmp    %ebx,%eax
 80483d8:	73 1e                	jae    80483f8 <__do_global_dtors_aux+0x48>
 80483da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80483e0:	83 c0 01             	add    $0x1,%eax
 80483e3:	a3 1c a0 04 08       	mov    %eax,0x804a01c
 80483e8:	ff 14 85 1c 9f 04 08 	call   *0x8049f1c(,%eax,4)
 80483ef:	a1 1c a0 04 08       	mov    0x804a01c,%eax
 80483f4:	39 d8                	cmp    %ebx,%eax
 80483f6:	72 e8                	jb     80483e0 <__do_global_dtors_aux+0x30>
 80483f8:	c6 05 18 a0 04 08 01 	movb   $0x1,0x804a018
 80483ff:	83 c4 04             	add    $0x4,%esp
 8048402:	5b                   	pop    %ebx
 8048403:	5d                   	pop    %ebp
 8048404:	c3                   	ret    
 8048405:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048409:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048410 <frame_dummy>:
 8048410:	55                   	push   %ebp
 8048411:	89 e5                	mov    %esp,%ebp
 8048413:	83 ec 18             	sub    $0x18,%esp
 8048416:	a1 24 9f 04 08       	mov    0x8049f24,%eax
 804841b:	85 c0                	test   %eax,%eax
 804841d:	74 12                	je     8048431 <frame_dummy+0x21>
 804841f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048424:	85 c0                	test   %eax,%eax
 8048426:	74 09                	je     8048431 <frame_dummy+0x21>
 8048428:	c7 04 24 24 9f 04 08 	movl   $0x8049f24,(%esp)
 804842f:	ff d0                	call   *%eax
 8048431:	c9                   	leave  
 8048432:	c3                   	ret    
 8048433:	90                   	nop

08048434 <main>:
 8048434:	55                   	push   %ebp
 8048435:	89 e5                	mov    %esp,%ebp
 8048437:	83 e4 f0             	and    $0xfffffff0,%esp
 804843a:	83 ec 30             	sub    $0x30,%esp
 804843d:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048443:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 8048447:	31 c0                	xor    %eax,%eax
 8048449:	c7 44 24 08 05 00 00 	movl   $0x5,0x8(%esp)
 8048450:	00 
 8048451:	c7 44 24 04 0c 00 00 	movl   $0xc,0x4(%esp)
 8048458:	00 
 8048459:	8d 44 24 20          	lea    0x20(%esp),%eax
 804845d:	89 04 24             	mov    %eax,(%esp)
 8048460:	e8 62 00 00 00       	call   80484c7 <foo>
 8048465:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 8048469:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8048470:	00 
 8048471:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8048478:	00 
 8048479:	eb 17                	jmp    8048492 <main+0x5e>
 804847b:	8d 44 24 20          	lea    0x20(%esp),%eax
 804847f:	03 44 24 14          	add    0x14(%esp),%eax
 8048483:	0f b6 00             	movzbl (%eax),%eax
 8048486:	0f be c0             	movsbl %al,%eax
 8048489:	01 44 24 18          	add    %eax,0x18(%esp)
 804848d:	83 44 24 14 01       	addl   $0x1,0x14(%esp)
 8048492:	83 7c 24 14 0b       	cmpl   $0xb,0x14(%esp)
 8048497:	7e e2                	jle    804847b <main+0x47>
 8048499:	b8 d0 85 04 08       	mov    $0x80485d0,%eax
 804849e:	8b 54 24 18          	mov    0x18(%esp),%edx
 80484a2:	89 54 24 04          	mov    %edx,0x4(%esp)
 80484a6:	89 04 24             	mov    %eax,(%esp)
 80484a9:	e8 92 fe ff ff       	call   8048340 <printf@plt>
 80484ae:	b8 00 00 00 00       	mov    $0x0,%eax
 80484b3:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 80484b7:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 80484be:	74 05                	je     80484c5 <main+0x91>
 80484c0:	e8 8b fe ff ff       	call   8048350 <__stack_chk_fail@plt>
 80484c5:	c9                   	leave  
 80484c6:	c3                   	ret    

080484c7 <foo>:
 80484c7:	55                   	push   %ebp
 80484c8:	89 e5                	mov    %esp,%ebp
 80484ca:	83 ec 10             	sub    $0x10,%esp
 80484cd:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 80484d4:	eb 0f                	jmp    80484e5 <foo+0x1e>
 80484d6:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80484d9:	03 45 08             	add    0x8(%ebp),%eax
 80484dc:	8b 55 10             	mov    0x10(%ebp),%edx
 80484df:	88 10                	mov    %dl,(%eax)
 80484e1:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 80484e5:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80484e8:	3b 45 0c             	cmp    0xc(%ebp),%eax
 80484eb:	7c e9                	jl     80484d6 <foo+0xf>
 80484ed:	8b 45 0c             	mov    0xc(%ebp),%eax
 80484f0:	c9                   	leave  
 80484f1:	c3                   	ret    
 80484f2:	90                   	nop
 80484f3:	90                   	nop
 80484f4:	90                   	nop
 80484f5:	90                   	nop
 80484f6:	90                   	nop
 80484f7:	90                   	nop
 80484f8:	90                   	nop
 80484f9:	90                   	nop
 80484fa:	90                   	nop
 80484fb:	90                   	nop
 80484fc:	90                   	nop
 80484fd:	90                   	nop
 80484fe:	90                   	nop
 80484ff:	90                   	nop

08048500 <__libc_csu_init>:
 8048500:	55                   	push   %ebp
 8048501:	57                   	push   %edi
 8048502:	56                   	push   %esi
 8048503:	53                   	push   %ebx
 8048504:	e8 69 00 00 00       	call   8048572 <__i686.get_pc_thunk.bx>
 8048509:	81 c3 eb 1a 00 00    	add    $0x1aeb,%ebx
 804850f:	83 ec 1c             	sub    $0x1c,%esp
 8048512:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048516:	8d bb 20 ff ff ff    	lea    -0xe0(%ebx),%edi
 804851c:	e8 d7 fd ff ff       	call   80482f8 <_init>
 8048521:	8d 83 20 ff ff ff    	lea    -0xe0(%ebx),%eax
 8048527:	29 c7                	sub    %eax,%edi
 8048529:	c1 ff 02             	sar    $0x2,%edi
 804852c:	85 ff                	test   %edi,%edi
 804852e:	74 29                	je     8048559 <__libc_csu_init+0x59>
 8048530:	31 f6                	xor    %esi,%esi
 8048532:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048538:	8b 44 24 38          	mov    0x38(%esp),%eax
 804853c:	89 2c 24             	mov    %ebp,(%esp)
 804853f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048543:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048547:	89 44 24 04          	mov    %eax,0x4(%esp)
 804854b:	ff 94 b3 20 ff ff ff 	call   *-0xe0(%ebx,%esi,4)
 8048552:	83 c6 01             	add    $0x1,%esi
 8048555:	39 fe                	cmp    %edi,%esi
 8048557:	75 df                	jne    8048538 <__libc_csu_init+0x38>
 8048559:	83 c4 1c             	add    $0x1c,%esp
 804855c:	5b                   	pop    %ebx
 804855d:	5e                   	pop    %esi
 804855e:	5f                   	pop    %edi
 804855f:	5d                   	pop    %ebp
 8048560:	c3                   	ret    
 8048561:	eb 0d                	jmp    8048570 <__libc_csu_fini>
 8048563:	90                   	nop
 8048564:	90                   	nop
 8048565:	90                   	nop
 8048566:	90                   	nop
 8048567:	90                   	nop
 8048568:	90                   	nop
 8048569:	90                   	nop
 804856a:	90                   	nop
 804856b:	90                   	nop
 804856c:	90                   	nop
 804856d:	90                   	nop
 804856e:	90                   	nop
 804856f:	90                   	nop

08048570 <__libc_csu_fini>:
 8048570:	f3 c3                	repz ret 

08048572 <__i686.get_pc_thunk.bx>:
 8048572:	8b 1c 24             	mov    (%esp),%ebx
 8048575:	c3                   	ret    
 8048576:	90                   	nop
 8048577:	90                   	nop
 8048578:	90                   	nop
 8048579:	90                   	nop
 804857a:	90                   	nop
 804857b:	90                   	nop
 804857c:	90                   	nop
 804857d:	90                   	nop
 804857e:	90                   	nop
 804857f:	90                   	nop

08048580 <__do_global_ctors_aux>:
 8048580:	55                   	push   %ebp
 8048581:	89 e5                	mov    %esp,%ebp
 8048583:	53                   	push   %ebx
 8048584:	83 ec 04             	sub    $0x4,%esp
 8048587:	a1 14 9f 04 08       	mov    0x8049f14,%eax
 804858c:	83 f8 ff             	cmp    $0xffffffff,%eax
 804858f:	74 13                	je     80485a4 <__do_global_ctors_aux+0x24>
 8048591:	bb 14 9f 04 08       	mov    $0x8049f14,%ebx
 8048596:	66 90                	xchg   %ax,%ax
 8048598:	83 eb 04             	sub    $0x4,%ebx
 804859b:	ff d0                	call   *%eax
 804859d:	8b 03                	mov    (%ebx),%eax
 804859f:	83 f8 ff             	cmp    $0xffffffff,%eax
 80485a2:	75 f4                	jne    8048598 <__do_global_ctors_aux+0x18>
 80485a4:	83 c4 04             	add    $0x4,%esp
 80485a7:	5b                   	pop    %ebx
 80485a8:	5d                   	pop    %ebp
 80485a9:	c3                   	ret    
 80485aa:	90                   	nop
 80485ab:	90                   	nop

Disassembly of section .fini:

080485ac <_fini>:
 80485ac:	53                   	push   %ebx
 80485ad:	83 ec 08             	sub    $0x8,%esp
 80485b0:	e8 00 00 00 00       	call   80485b5 <_fini+0x9>
 80485b5:	5b                   	pop    %ebx
 80485b6:	81 c3 3f 1a 00 00    	add    $0x1a3f,%ebx
 80485bc:	e8 ef fd ff ff       	call   80483b0 <__do_global_dtors_aux>
 80485c1:	83 c4 08             	add    $0x8,%esp
 80485c4:	5b                   	pop    %ebx
 80485c5:	c3                   	ret    
